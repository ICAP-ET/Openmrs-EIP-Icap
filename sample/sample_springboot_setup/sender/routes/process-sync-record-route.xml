<routes xmlns="http://camel.apache.org/schema/spring">

    <route id="process-sync-record" errorHandlerRef="deadLetterChannelBuilder">
        <from uri="direct:process-sync-record" />

        <log message=":" />

        <!-- TODO set status of the record to processing, wrap all code in a try catch clause and set result status -->

        <log message="Processing -> ${body}" />

        <setProperty propertyName="sync-record">
            <simple>${body}</simple>
        </setProperty>

        <!-- Exclude source DB  for this sync record -->
        <toD uri="jpa:org.openmrs.sync.app.management.entity.OpenmrsDatabase?query=SELECT d FROM org.openmrs.sync.app.management.entity.OpenmrsDatabase d" />

        <split streaming="true">
            <simple>${body}</simple>
            <setProperty propertyName="destination-db">
                <simple>${body}</simple>
            </setProperty>

            <log message="Staging sync attempt for destination DB: ${body}" />

            <toD uri="jpa:org.openmrs.sync.app.management.entity.SyncAttempt?query=SELECT a FROM org.openmrs.sync.app.management.entity.SyncAttempt a WHERE a.syncRecordUuid = '${property.sync-record.uuid}' AND a.destination = ${property.destination-db.id} AND a.status = 'NEW'" />

            <choice>
                <when>
                    <simple>${body.size()} > 1</simple>
                    <!-- TODO log error message instead and mark the sync record status as failed and proceed -->
                    <throwException message="Found multiple new attempts for the same DB -> ${body}"
                                    exceptionType="org.openmrs.sync.component.exception.OpenmrsSyncException" />
                </when>
                <when>
                    <simple>${body.size()} == 0</simple>
                    <setBody>
                        <spel>
                            #{new org.openmrs.sync.app.management.entity.SyncAttempt()}
                        </spel>
                    </setBody>
                    <script>
                        <spel>
                            #{body.setSyncRecordUuid(getProperty('sync-record').getUuid())}
                            #{body.setSource(getProperty('destination-db'))}
                            #{body.setDestination(getProperty('destination-db'))}
                            #{body.setStatus(T(org.openmrs.sync.component.common.Status).valueOf('NEW'))}
                            #{body.setDateCreated(new java.util.Date())}
                            #{body.setUuid(T(java.util.UUID).randomUUID())}
                        </spel>
                    </script>

                    <log message="Creating ${body}" />

                    <to uri="jpa:org.openmrs.sync.app.management.entity.SyncAttempt?usePersist=true" />

                    <log message="Successfully staged sync attempt" />
                </when>
                <otherwise>
                    <log message="Found an existing ${body}" />

                    <setBody>
                        <simple>${body[0]}</simple>
                    </setBody>
                </otherwise>
            </choice>
            
        </split>

        <!-- TODO Log count of DBs we have successfully queued to -->
        <log message="Done staging sync attempts for ${property.sync-record}" />

    </route>

</routes>
