<routes xmlns="http://camel.apache.org/schema/spring">

    <route id="retry" errorHandlerRef="watcherErrorHandler">
        <from uri="direct:retry" />

        <log loggingLevel="DEBUG" message="Fetching events in the retry queue" />

        <toD uri="jpa:SenderRetryQueueItem?query=SELECT r.id FROM SenderRetryQueueItem r ORDER BY r.dateCreated ASC, r.id ASC" />

        <choice>
            <when>
                <simple>${body.size()} > 0</simple>
                <log message="Event count in the retry queue: ${body.size()}" />

                <!-- We need to track entities with failed retry items so that we maintain ordering to avoid syncing deletes
                     before failed insert retries for the same entity for the same route.

                     Using a synchronized list for thread safety in case we start supporting parallel processing
                     otherwise it's likely the dev might unknowingly not change it at the time.
                 -->
                <setProperty name="route-failed-entities">
                    <spel>#{T(java.util.Collections).synchronizedSet(new java.util.HashSet())}</spel>
                </setProperty>
                <setProperty name="event-destinations">
                    <spel>#{new java.util.ArrayList()}</spel>
                </setProperty>
                <split>
                    <simple>{{db-event.destinations}}</simple>
                    <script>
                        <spel>#{getProperty('event-destinations').add(body.trim())}</spel>
                    </script>
                </split>

                <split parallelProcessing="false">
                    <simple>${body}</simple>
                    
                    <to uri="direct:watcher-retry-item-handler" />
                </split>
            </when>
            <otherwise>
                <log loggingLevel="DEBUG" message="No events found in the retry queue" />
            </otherwise>
        </choice>

        <log loggingLevel="DEBUG" message="Done processing events in retry queue in this poll" />
    </route>

</routes>
