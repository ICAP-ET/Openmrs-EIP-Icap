<routes xmlns="http://camel.apache.org/schema/spring">

    <route id="out-bound-retry" errorHandlerRef="outBoundErrorHandler">
        <from uri="scheduler:retry?initialDelay={{db-event.retry.initial.delay}}&amp;delay={{db-event.retry.interval}}" />

        <log message="Fetching events in the retry queue" loggingLevel="DEBUG" />

        <toD uri="jpa:RetryQueueItem?query=SELECT r.id FROM RetryQueueItem r ORDER BY r.dateCreated ASC" />

        <when>
            <simple>${body.size()} > 0</simple>
            <log message="Event count in the retry queue: ${body.size()}" />
        </when>

        <!-- We need to track entities with failed retry items so that we maintain ordering to avoid syncing deletes
             before failed insert retries for the same entity.
             
             Using a synchronized list for thread safety in case we start supporting parallel processing
             otherwise it's likely the dev might unknowingly not change it at the time.
         -->
        <setProperty name="failed-entities">
            <spel>#{T(java.util.Collections).synchronizedSet(new java.util.HashSet())}</spel>
        </setProperty>

        <split parallelProcessing="false">
            <simple>${body}</simple>
            <setProperty name="retry-item-id">
                <simple>${body}</simple>
            </setProperty>
            <log message="Loading event retry item with id: ${body}" />

            <toD uri="jpa:RetryQueueItem?query=SELECT r FROM RetryQueueItem r WHERE r.id = ${body}" />

            <setProperty name="retry-item">
                <simple>${body[0]}</simple>
            </setProperty>

            <choice>
                <when>
                    <simple>${exchangeProperty.failed-entities.contains(${exchangeProperty.retry-item.event.tableName}#${exchangeProperty.retry-item.event.primaryKeyId})} == true</simple>
                    <log message="Skipping retry item with id: ${exchangeProperty.retry-item-id} for ${exchangeProperty.retry-item.event.tableName}#${exchangeProperty.retry-item.event.primaryKeyId} because the entity still has older failed event(s) in the queue" />
                </when>
                <otherwise>
                    <log message="Re-processing: ${exchangeProperty.retry-item}" />
                    <script>
                        <spel>
                            #{getProperty('retry-item').setAttemptCount(getProperty('retry-item').getAttemptCount() + 1)}
                        </spel>
                    </script>
                    <setProperty name="event">
                        <simple>${exchangeProperty.retry-item.event}</simple>
                    </setProperty>
                    <setProperty name="db-event-destinations">
                        <simple>${exchangeProperty.retry-item.route}</simple>
                    </setProperty>
                    <setBody>
                        <simple>${exchangeProperty.event}</simple>
                    </setBody>

                    <to uri="direct:db-event-processor" />
                </otherwise>
            </choice>
        </split>
    </route>

</routes>