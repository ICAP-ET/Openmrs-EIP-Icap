<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="debezium" errorHandlerRef="recordingErrorHandler">
        <from uri="debezium-mysql:extract?databaseServerId={{debezium.db.serverId}}&amp;databaseServerName={{debezium.db.serverName}}&amp;databaseHostname={{openmrs.db.host}}&amp;databasePort={{openmrs.db.port}}&amp;databaseUser={{debezium.db.user}}&amp;databasePassword={{debezium.db.password}}&amp;databaseWhitelist={{openmrs.db.name}}&amp;offsetStorageFileName={{debezium.offsetFilename}}&amp;databaseHistoryFileFilename={{debezium.historyFilename}}&amp;tableWhitelist={{debezium.tablesToSync}}&amp;offsetFlushIntervalMs=0&amp;snapshotMode=initial&amp;snapshotFetchSize=1000&amp;snapshotLockingMode=extended&amp;includeSchemaChanges=false" />

        <log message=":" loggingLevel="DEBUG" />
        <log message="Received DB event: Operation=${headers.CamelDebeziumOperation}, Body=${body}, Metadata=${headers.CamelDebeziumSourceMetadata}" />
        <setProperty name="event-body">
            <simple>${body}</simple>
        </setProperty>
        <setProperty name="event">
            <spel>#{new org.openmrs.eip.component.entity.Event()}</spel>
        </setProperty>
        <script>
            <spel>
                <!-- TODO Take care of situation where a table has a composite FK -->
                #{getProperty('event').setPrimaryKeyId(request.headers.CamelDebeziumKey.get(request.headers.CamelDebeziumKey.schema().fields().get(0)))}
                #{getProperty('event').setTableName(request.headers.CamelDebeziumSourceMetadata.get('table'))}
                #{getProperty('event').setOperation(request.headers.CamelDebeziumOperation)}
                #{getProperty('event').setSnapshot(request.headers.CamelDebeziumSourceMetadata.get('snapshot') != 'false')}
            </spel>
        </script>

        <choice>
            <when>
                <simple>${headers.CamelDebeziumOperation} == 'c' || ${headers.CamelDebeziumOperation} == 'u' || ${headers.CamelDebeziumOperation} == 'd'</simple>

                <!-- TODO For subclasses, capture the primary key early -->
                <choice>
                    <when>
                        <simple>${headers.CamelDebeziumOperation} == 'd'</simple>
                        <script>
                            <spel>#{getProperty('event').setIdentifier(request.headers.CamelDebeziumBefore.get('uuid'))}</spel>
                        </script>
                    </when>
                    <otherwise>
                        <script>
                            <spel>#{getProperty('event').setIdentifier(body.get('uuid'))}</spel>
                        </script>
                    </otherwise>
                </choice>

                <log message="${exchangeProperty.event}" loggingLevel="DEBUG" />

                <setProperty name="route-retry-count-map">
                    <spel>#{new java.util.HashMap()}</spel>
                </setProperty>
                <script>
                    <spel>#{getProperty('route-retry-count-map').put('all-routes', 0)}</spel>
                </script>
                <split>
                    <simple>{{db-event.destinations}}</simple>
                    <script>
                        <spel>#{getProperty('route-retry-count-map').put(body.trim(), 0)}</spel>
                    </script>
                </split>
                <when>
                    <simple>${headers.CamelDebeziumOperation} != 'c'</simple>
                    <toD uri="jpa:RetryQueueItem?query=SELECT r from RetryQueueItem r WHERE r.event.tableName='${exchangeProperty.event.tableName}' AND r.event.primaryKeyId='${exchangeProperty.event.primaryKeyId}'" />
                    <when>
                        <simple>${body} != null</simple>
                        <split stopOnException="true">
                            <simple>${body}</simple>
                            <choice>
                                <when>
                                    <simple>${body.route} == null</simple>
                                    <script>
                                        <spel>#{getProperty('route-retry-count-map').put('all-routes', getProperty('route-retry-count-map').get('all-routes') + 1)}</spel>
                                    </script>
                                </when>
                                <when>
                                    <simple>${exchangeProperty.route-retry-count-map.containsKey(${body.route.trim()})} != true</simple>
                                    <throwException exceptionType="java.lang.Exception" message="No listener route found with name ${body.route} for failed event ${body}" />
                                </when>
                                <otherwise>
                                    <script>
                                        <spel>#{getProperty('route-retry-count-map').put(body.route, getProperty('route-retry-count-map').get(body.route.trim()) + 1)}</spel>
                                    </script>
                                </otherwise>
                            </choice>
                        </split>
                    </when>
                </when>
                <log message="Route and retryCount map -> ${exchangeProperty.route-retry-count-map}" loggingLevel="DEBUG" />

                <choice>
                    <when>
                        <simple>${exchangeProperty.debezium-table} == 'test_order' || ${exchangeProperty.debezium-table} == 'drug_order' || ${exchangeProperty.debezium-table} == 'patient'</simple>
                        <choice>
                            <when>
                                <simple>${exchangeProperty.debezium-table} == 'patient'</simple>
                                <setProperty name="debezium-refTable">
                                    <constant>person</constant>
                                </setProperty>
                                <setProperty name="debezium-refColumn">
                                    <constant>person_id</constant>
                                </setProperty>
                                <setProperty name="debezium-column">
                                    <constant>patient_id</constant>
                                </setProperty>
                            </when>
                            <otherwise>
                                <setProperty name="debezium-refTable">
                                    <constant>orders</constant>
                                </setProperty>
                                <setProperty name="debezium-refColumn">
                                    <constant>order_id</constant>
                                </setProperty>
                                <setProperty name="debezium-column">
                                    <constant>order_id</constant>
                                </setProperty>
                            </otherwise>
                        </choice>

                        <log message="Looking up uuid for ${exchangeProperty.debezium-table} from referenced ${exchangeProperty.debezium-refTable} table" loggingLevel="DEBUG" />

                        <toD uri="sql:SELECT uuid FROM ${exchangeProperty.debezium-refTable} WHERE ${exchangeProperty.debezium-refColumn}='${exchangeProperty.event-body.get(${exchangeProperty.debezium-column})}'?dataSource=openmrsDataSource" />

                        <script>
                            <spel>#{getProperty('event').setIdentifier(body.get('uuid'))}</spel>
                        </script>
                    </when>
                </choice>

                <!-- For deletes and updates, ensure there is no retry items in the queue that was not submitted to any
                    route to maintain order so that events that happened earlier don't override those that happened
                    after them -->
                <when>
                    <simple>${headers.CamelDebeziumOperation} != 'c' &amp;&amp; ${exchangeProperty.route-retry-count-map.get('all-routes')} > 0</simple>
                    <log message="Moving the event to the failure queue because the entity has ${exchangeProperty.route-retry-count-map.get('all-routes')} event(s) in the retry queue" />
                    <setProperty name="retry-event-msg">
                        <simple>Cannot process the event because the entity has ${exchangeProperty.route-retry-count-map.get('all-routes')} event(s) in the retry queue</simple>
                    </setProperty>
                    <throwException exceptionType="java.lang.Exception" message="${exchangeProperty.retry-event-msg}" />
                </when>

                <split parallelProcessing="true">
                    <simple>{{db-event.destinations}}</simple>
                    <setProperty name="db-event-dest">
                        <simple>${body.trim()}</simple>
                    </setProperty>

                    <!-- For deletes and updates, ensure there is no retry item sin the queue for this route so that
                        events that happened earlier don't override those that happened after them -->
                    <when>
                        <simple>${headers.CamelDebeziumOperation} != 'c' &amp;&amp; ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.db-event-dest})} > 0</simple>
                        <log message="Moving the event to the failure queue because the entity has ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.db-event-dest})} event(s) in the retry queue for route: ${exchangeProperty.db-event-dest}" />
                        <setProperty name="retry-event-message">
                            <simple>Cannot process the event because the entity has ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.db-event-dest})} event(s) in the retry queue</simple>
                        </setProperty>
                        <throwException exceptionType="java.lang.Exception" message="${exchangeProperty.retry-event-message}" />
                    </when>

                    <log message="Publishing to destination: ${exchangeProperty.db-event-dest}" loggingLevel="DEBUG" />

                    <setBody>
                        <simple>${exchangeProperty.event}</simple>
                    </setBody>

                    <toD uri="direct:${exchangeProperty.db-event-dest}"/>
                </split>
            </when>
            <otherwise>
                <log message="Don't know how to handle DB event -> Operation=${headers.CamelDebeziumOperation}, Body=${body}, Metadata=${headers.CamelDebeziumSourceMetadata}" loggingLevel="ERROR" />
            </otherwise>
        </choice>

    </route>
</routes>
