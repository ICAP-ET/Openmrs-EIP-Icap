<!--
    Route to receive exceptions and log them in the failure table in the management DB.
    Note that this handler should only be used by routes that are registered to receieve DB events so that when errors
    are encountered while processing the DB event there is an option to retry.
 -->
<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="inbound-error-handler">
        <from uri="direct:inbound-error-handler" />

        <setProperty name="error-msg">
            <simple>${exception.toString()}</simple>
        </setProperty>

        <log message="Error: ${exchangeProperty.error-msg}" loggingLevel="WARN" />

        <when>
            <simple>${exchangeProperty.error-msg.length()} > 1024</simple>
            <setProperty name="error-msg">
                <simple>${exchangeProperty.error-msg.substring(0, 1024)}</simple>
            </setProperty>
        </when>

        <when>
            <simple>${exception.cause} != null</simple>
            <setProperty name="cause-error-msg">
                <simple>${exception.cause.toString()}</simple>
            </setProperty>
            <when>
                <simple>${exchangeProperty.cause-error-msg.length()} > 1024</simple>
                <setProperty name="cause-error-msg">
                    <simple>${exchangeProperty.cause-error-msg.substring(0, 1024)}</simple>
                </setProperty>
            </when>
            <log message="Cause: ${exchangeProperty.cause-error-msg}" loggingLevel="DEBUG" />
        </when>

        <choice>
            <when>
                <!-- This is a failure when processing a new message -->
                <simple>${exchangeProperty.retry-item-id} == null</simple>
                <log message="Adding new item to retry queue for ${exchangeProperty.entity-payload}" />
                <setProperty name="retry-item">
                    <spel>
                        #{new org.openmrs.eip.app.management.entity.InBoundRetryQueueItem()}
                    </spel>
                </setProperty>
                <script>
                    <spel>
                        #{getProperty('retry-item').setRoute(getProperty('entity-payload-dest'))}
                        #{getProperty('retry-item').setIdentifier(getProperty('entity-id'))}
                        #{getProperty('retry-item').setModelClassName(getProperty('model-class'))}
                        #{getProperty('retry-item').setMessage(getProperty('error-msg'))}
                        #{getProperty('retry-item').setCauseMessage(getProperty('cause-error-msg'))}
                        #{getProperty('retry-item').setDateCreated(new java.util.Date())}
                    </spel>
                </script>
                <setBody>
                    <simple>${exchangeProperty.retry-item}</simple>
                </setBody>

                <choice>
                    <when>
                        <simple>${exchangeProperty.retry-item.route} != null</simple>
                        <log message="Adding failed DB event to retry queue for route: ${exchangeProperty.retry-item.route} -> ${body}" loggingLevel="DEBUG" />

                        <to uri="jpa:InboundRetryQueueItem?usePersist=true" />

                        <log message="Successfully added DB event to retry queue ${body}" loggingLevel="DEBUG" />
                    </when>
                    <otherwise>
                        <log message="Adding failed DB event for each registered route" />
                        <split parallelProcessing="false">
                            <simple>{{entity-payload.destinations}}</simple>
                            <setProperty name="retry-item-dest">
                                <simple>${body.trim()}</simple>
                            </setProperty>
                            <setBody>
                                <spel>
                                    #{new org.openmrs.eip.app.management.entity.InBoundRetryQueueItem()}
                                </spel>
                            </setBody>
                            <script>
                                <spel>
                                    #{body.setRoute(getProperty('retry-item-dest'))}
                                    #{body.setIdentifier(getProperty('entity-id'))}
                                    #{body.setModelClassName(getProperty('model-class'))}
                                    #{body.setMessage(getProperty('error-msg'))}
                                    #{body.setCauseMessage(getProperty('cause-error-msg'))}
                                    #{body.setDateCreated(new java.util.Date())}
                                </spel>
                            </script>
                            <log message="Adding failed DB event to retry queue -> ${body}" loggingLevel="DEBUG" />

                            <to uri="jpa:InboundRetryQueueItem?usePersist=true" />

                            <log message="Successfully added DB event to retry queue ${body}" loggingLevel="DEBUG" />
                        </split>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <!-- This is a failure when re-processing a previously failed message -->
                <choice>
                    <when>
                        <simple>${exchangeProperty.retry-item-id} == null &amp;&amp; ${exchangeProperty.retry-item} == null</simple>
                        <log message="A fatal error occurred while attempting to process message in the retry queue, Error: ${exchangeProperty.error-msg} Cause: ${exchangeProperty.cause-error-msg}" loggingLevel="ERROR" />
                    </when>
                    <otherwise>
                        <log message="Updating attempt count for ${exchangeProperty.retry-item}" />

                        <when>
                            <simple>${exchangeProperty.retry-item} == null</simple>
                            <log message="Loading retry item with id: ${exchangeProperty.retry-item-id}" loggingLevel="DEBUG" />

                            <toD uri="jpa:InboundRetryQueueItem?query=SELECT i FROM InboundRetryQueueItem i WHERE i.id = ${exchangeProperty.retry-item-id}" />

                            <log message="Loaded: ${body}" loggingLevel="DEBUG" />
                            <setProperty name="retry-item">
                                <simple>${body[0]}</simple>
                            </setProperty>
                        </when>

                        <script>
                            <spel>
                                #{getProperty('retry-item').setAttemptCount(getProperty('retry-item').getAttemptCount() + 1)}
                                #{getProperty('retry-item').setMessage(getProperty('error-msg'))}
                                #{getProperty('retry-item').setCauseMessage(getProperty('cause-error-msg'))}
                                #{getProperty('retry-item').setDateChanged(new java.util.Date())}
                            </spel>
                        </script>
                        <setBody>
                            <simple>${exchangeProperty.retry-item}</simple>
                        </setBody>

                        <log message="Saving updates for retry item -> ${body}" loggingLevel="DEBUG" />

                        <to uri="jpa:InboundRetryQueueItem" />

                        <log message="Successfully updated retry item ${body}" loggingLevel="DEBUG" />
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
        
    </route>
</routes>