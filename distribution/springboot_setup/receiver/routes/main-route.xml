<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="receiver-main" errorHandlerRef="inBoundErrorHandler">
        <from uri="{{camel.input.endpoint}}" />
        <!--<process ref="pgpDecryptService"/>-->
        <log message=":" loggingLevel="DEBUG" />
        <choice>
            <when>
                <method ref="isFilePredicate" />
                <log message="Received complex_obs data file: ${headers.CamelFileName}" />
                <transform>
                    <method ref="removeFileTagsExpression" />
                </transform>
                <unmarshal>
                    <base64/>
                </unmarshal>
                <to uri="file:{{camel.input.endpoint.complex.obs.data.directory}}" />
            </when>
            <otherwise>
                <log message="Received entity-payload: ${body}" />
                <setProperty name="entity-payload">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty name="model-class">
                    <jsonpath>$.tableToSyncModelClass</jsonpath>
                </setProperty>
                <setProperty name="entity-id">
                    <jsonpath>$.model.uuid</jsonpath>
                </setProperty>

                <log message="Configured destinations -> {{message.destinations}}" loggingLevel="DEBUG" />

                <setProperty name="route-retry-count-map">
                    <spel>#{new java.util.HashMap()}</spel>
                </setProperty>
                <split>
                    <simple>{{message.destinations}}</simple>
                    <script>
                        <spel>#{getProperty('route-retry-count-map').put(body.trim(), 0)}</spel>
                    </script>
                </split>

                <toD uri="jpa:InBoundRetryQueueItem?query=SELECT i from InBoundRetryQueueItem i WHERE i.modelClassName ='${exchangeProperty.model-class}' AND i.identifier='${exchangeProperty.entity-id}'" />

                <split stopOnException="true">
                    <simple>${body}</simple>
                    <choice>
                        <when>
                            <simple>${exchangeProperty.route-retry-count-map.containsKey(${body.route.trim()})} != true</simple>
                            <throwException exceptionType="java.lang.Exception" message="No listener route found with name ${body.route} for retry queue item" />
                        </when>
                        <otherwise>
                            <script>
                                <spel>#{getProperty('route-retry-count-map').put(body.route, getProperty('route-retry-count-map').get(body.route.trim()) + 1)}</spel>
                            </script>
                        </otherwise>
                    </choice>
                </split>

                <split parallelProcessing="false">
                    <simple>{{message.destinations}}</simple>
                    <setProperty name="entity-payload-dest">
                        <simple>${body.trim()}</simple>
                    </setProperty>

                    <!-- Ensure there is no retry items in the queue for this route for this entity so that changes in messages
                        that happened later don't overwrite those that happened before them -->
                    <when>
                        <simple>${exchangeProperty.route-retry-count-map.get(${exchangeProperty.entity-payload-dest})} > 0</simple>
                        <log message="Moving the message to the failure queue because the entity has ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.entity-payload-dest})} messages(s) in the retry queue for route: ${exchangeProperty.entity-payload-dest}" />
                        <setProperty name="retry-message">
                            <simple>Cannot process the message because the entity has ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.entity-payload-dest})} messages(s) in the retry queue</simple>
                        </setProperty>
                        <throwException exceptionType="java.lang.Exception" message="${exchangeProperty.retry-message}" />
                    </when>

                    <log message="Publishing to destination: ${exchangeProperty.entity-payload-dest}" />

                    <setBody>
                        <simple>${exchangeProperty.entity-payload}</simple>
                    </setBody>

                    <toD uri="direct:${exchangeProperty.entity-payload-dest}" />

                </split>
            </otherwise>
        </choice>
    </route>
</routes>
