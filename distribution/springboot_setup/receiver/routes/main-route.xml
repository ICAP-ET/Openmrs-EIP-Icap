<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="receiver-main" errorHandlerRef="InBoundErrorHandler">
        <from uri="{{camel.input.endpoint}}" />
        <!--<process ref="pgpDecryptService"/>-->
        <log message=":" loggingLevel="DEBUG" />
        <log message="Received entity-payload: ${body}" />
        <setProperty name="entity-payload">
            <simple>${body}</simple>
        </setProperty>
        <setProperty name="model-class">
            <jsonpath>$.tableToSyncModelClass</jsonpath>
        </setProperty>
        <setProperty name="entity-id">
            <jsonpath>$.model.uuid</jsonpath>
        </setProperty>
        <log message="Entity model class name: ${exchangeProperty.model-class}" loggingLevel="DEBUG" />
        <log message="Entity id: ${exchangeProperty.entity-id}" loggingLevel="DEBUG" />

        <log message="Configured destinations -> {{entity-payload.destinations}}" loggingLevel="DEBUG" />

        <setProperty name="route-retry-count-map">
            <spel>#{new java.util.HashMap()}</spel>
        </setProperty>
        <split>
            <simple>{{entity-payload.destinations}}</simple>
            <script>
                <spel>#{getProperty('route-retry-count-map').put(body.trim(), 0)}</spel>
            </script>
        </split>
        <toD uri="sql:SELECT uuid FROM me?dataSource=openmrsDataSource" />
        <toD uri="jpa:InBoundRetryQueueItem?query=SELECT i from InBoundRetryQueueItem i WHERE i.modelClassName ='${exchangeProperty.model-class}' AND i.identifier='${exchangeProperty.entity-id}'" />

        <split stopOnException="true">
            <simple>${body}</simple>
            <choice>
                <when>
                    <simple>${exchangeProperty.route-retry-count-map.containsKey(${body.route.trim()})} != true</simple>
                    <throwException exceptionType="java.lang.Exception" message="No listener route found with name ${body.route} for failed event ${body}" />
                </when>
                <otherwise>
                    <script>
                        <spel>#{getProperty('route-retry-count-map').put(body.route, getProperty('route-retry-count-map').get(body.route.trim()) + 1)}</spel>
                    </script>
                </otherwise>
            </choice>
        </split>

        <!--<split parallelProcessing="true">
            <simple>{{entity-payload.destinations}}</simple>
            <setProperty name="entity-payload-destination">
                <simple>${body}</simple>
            </setProperty>

            <log message="Publishing to destination: ${exchangeProperty.entity-payload-destination}" />

            <setBody>
                <simple>${exchangeProperty.entity-payload}</simple>
            </setBody>
            
            <toD uri="direct:${exchangeProperty.entity-payload-destination}" />

        </split>-->
    </route>
</routes>
